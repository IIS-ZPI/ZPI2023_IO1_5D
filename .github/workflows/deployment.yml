name: Deployment

on:
  push:
    branches: [ "release" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [21.x]

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - run: npm install yarn
    - run: yarn
    - run: yarn build

    - name: Deploy with gh-pages
      run: |
        git remote set-url origin https://git:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
        yarn deploy -- -u "github-actions-bot <support+actions@github.com>"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Fetch all tags
      run: git fetch --tags

    - name: Get latest tag
      id: get_latest_tag
      run: |
        latest_tag=$(git describe --tags `git rev-list --tags --max-count=1` 2>/dev/null)
        if [ -z "$latest_tag" ]; then
          echo "No tags found. Setting default tag to v0.0.0"
          latest_tag="v0.0.0"
        fi
        echo "::set-output name=tag::$latest_tag"

    - name: Calculate new tag
      id: calc_new_tag
      run: |
        latest_tag=${{ steps.get_latest_tag.outputs.tag }}
        tag_number=$(echo $latest_tag | sed -e 's/^v//')
        IFS='.' read -r -a parts <<< "$tag_number"
        major=${parts[0]}
        minor=${parts[1]}
        patch=${parts[2]}
        new_patch=$((patch + 1))
        new_tag="v$major.$minor.$new_patch"
        echo "New tag: $new_tag"
        echo "::set-output name=new_tag::$new_tag"

    - name: Create new tag
      run: |
        new_tag=${{ steps.calc_new_tag.outputs.new_tag }}
        git tag $new_tag
        git push origin $new_tag
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create GitHub release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ steps.calc_new_tag.outputs.new_tag }}
        release_name: ${{ steps.calc_new_tag.outputs.new_tag }}
        body: "Release ${{ steps.calc_new_tag.outputs.new_tag }}"
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
